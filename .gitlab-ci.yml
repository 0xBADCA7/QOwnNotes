#
# GitLab CI configuration for QOwnNotes
# https://ci.gitlab.com/lint
#

before_script:
    - PATH="/Applications/Qt/5.4/clang_64/bin:$PATH"
    - QTDIR="/Applications/Qt/5.4/clang_64"
    - cd src
    # http://doc.gitlab.com/ci/variables/README.html
    - echo "#define BUILD ""$CI_BUILD_ID" > build_number.h
    - qmake -project
    - qmake QOwnNotes.pro -r -spec macx-clang CONFIG+=x86_64
    - make

build_job:
  type: build
  script:
    - echo do some testing...
  only:
    - develop
    - master

deployment_job:
  type: deploy
  script:
    - $QTDIR/bin/macdeployqt QOwnNotes.app -dmg
    - RELEASE_JSON_FILE="../gitlab-ci/github-release.json"
    - cat $RELEASE_JSON_FILE
    - sed -i -e 's/CI_BUILD_ID/'"$CI_BUILD_ID"'/g' $RELEASE_JSON_FILE
    - API_JSON=$(cat $RELEASE_JSON_FILE)
    # creating the GitHub release and parsing returned release id
    # $GITHUB_ACCESS_TOKEN is set as a secret variable
    # https://ci.gitlab.com/projects/5070/variables
    # https://github.com/settings/tokens
    - RELEASE_ID=$(curl --data "$API_JSON" https://api.github.com/repos/pbek/testrepo/releases?access_token=$GITHUB_ACCESS_TOKEN | python -c 'import sys, json; print json.load(sys.stdin)["id"]')
    - echo $RELEASE_ID
    # check if $RELEASE_ID is greater than 0, fail build if not
    - if [[ ! $i -gt 0 ]]; then exit 1; fi
    # deploy QOwnNotes.dmg
    - curl -H "Authorization: token $GITHUB_ACCESS_TOKEN" -H "Accept: application/vnd.github.manifold-preview" -H "Content-Type: application/x-apple-diskimage" --data-binary @QOwnNotes.dmg "https://uploads.github.com/repos/pbek/testrepo/releases/$RELEASE_ID/assets?name=QOwnNotes.dmg"

  only:
    - develop
#    - master
